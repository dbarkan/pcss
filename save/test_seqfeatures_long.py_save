import unittest
import configobj
import pcssTools
import pcssPeptide
import pcssTests
import pcssFeatures
import pcssFeatureHandlers
import pcssErrors
import shutil
import logging
import sys
import time
import os
logging.basicConfig(stream=sys.stdout)
logging.root.setLevel(logging.DEBUG)

class TestSequenceFeaturesLong(unittest.TestCase):

    def test_psipred(self):
        psipredTest = pcssTests.PsipredTest("testConfig/testPcssConfigLong.txt")
        psipredData = pcssTests.PsipredData()
        psipredTest.proteins[0].processPsipred(psipredTest.psipredReader, psipredTest.psipredRunner)

        psipredCallString = psipredTest.proteins[0].psipredProteinCalls.makeFullCallString()
        self.assertEquals(psipredCallString, psipredTest.getExpectedPsipredResult())

        peptide = psipredTest.proteins[0].peptides[59]
        self.assertEquals(peptide.features["psipred_string_feature"].getValueString(), psipredData.stringFeatureValue)
        self.assertEquals(peptide.features["psipred_score_feature"].getValueString(), psipredData.scoreFeatureValue)
        self.assertRaises(pcssErrors.FeatureException, psipredTest.proteins[0].psipredProteinCalls.getSequenceFeatureCall, 1000)
        time.sleep(5)
        shutil.rmtree(psipredTest.psipredFileHandler.getSequenceFeatureDir(psipredTest.proteins[0].modbaseSequenceId))


    def test_disopred(self):
        disopredTest = pcssTests.DisopredTest("testConfig/testPcssConfigLong.txt")

        disopredTest.proteins[0].processDisopred(disopredTest.disopredReader, disopredTest.disopredRunner)

        disopredCallString = disopredTest.proteins[0].disorderProteinCalls.makeFullCallString()
        self.assertEquals(disopredCallString, disopredTest.getExpectedDisopredResult())
        peptide = disopredTest.proteins[0].peptides[59]
        self.assertEquals(peptide.features["disorder_string_feature"].getValueString(), "OOOODDDD")
        self.assertEquals(peptide.features["disorder_score_feature"].getValueString(), "0.01, 0.022, 0.039, 0.055, 0.118, 0.144, 0.153, 0.178")
        self.assertRaises(pcssErrors.FeatureException, disopredTest.proteins[0].disorderProteinCalls.getSequenceFeatureCall, 1000)
        time.sleep(5)
        shutil.rmtree(disopredTest.disopredFileHandler.getSequenceFeatureDir(disopredTest.proteins[0].modbaseSequenceId))
    
if __name__ == '__main__':
    unittest.main()
